import numpy as np
import networkx as nx

def test_network_vulnerability(network, num_removals):
    G = nx.from_numpy_matrix(network)

    avg_path_lengths = []
    diameters = []

    for _ in range(num_removals):
        degrees = dict(G.degree())
        
        max_degree_stop = max(degrees, key=degrees.get)
        avg_path_length = nx.average_shortest_path_length(G)
        diameter = nx.diameter(G)
        avg_path_lengths.append(avg_path_length)
        diameters.append(diameter)
        G.remove_node(max_degree_stop)

    ratios = np.array(avg_path_lengths) / np.array(diameters)
    return nx.to_numpy_matrix(G), ratios